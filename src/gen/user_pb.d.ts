// @generated by protoc-gen-es v1.0.0 with parameter "target=js+dts"
// @generated from file user.proto (package user.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message user.v1.User
 */
export declare class User extends Message<User> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 4;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<User>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.User";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User;

  static equals(a: User | PlainMessage<User> | undefined, b: User | PlainMessage<User> | undefined): boolean;
}

/**
 * @generated from message user.v1.PutUserRequest
 */
export declare class PutUserRequest extends Message<PutUserRequest> {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  constructor(data?: PartialMessage<PutUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.PutUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutUserRequest;

  static equals(a: PutUserRequest | PlainMessage<PutUserRequest> | undefined, b: PutUserRequest | PlainMessage<PutUserRequest> | undefined): boolean;
}

/**
 * @generated from message user.v1.PutUserResponse
 */
export declare class PutUserResponse extends Message<PutUserResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  constructor(data?: PartialMessage<PutUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.PutUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutUserResponse;

  static equals(a: PutUserResponse | PlainMessage<PutUserResponse> | undefined, b: PutUserResponse | PlainMessage<PutUserResponse> | undefined): boolean;
}

/**
 * @generated from message user.v1.LoginUserRequest
 */
export declare class LoginUserRequest extends Message<LoginUserRequest> {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  constructor(data?: PartialMessage<LoginUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.LoginUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginUserRequest;

  static equals(a: LoginUserRequest | PlainMessage<LoginUserRequest> | undefined, b: LoginUserRequest | PlainMessage<LoginUserRequest> | undefined): boolean;
}

/**
 * @generated from message user.v1.LoginUserResponse
 */
export declare class LoginUserResponse extends Message<LoginUserResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  constructor(data?: PartialMessage<LoginUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.LoginUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginUserResponse;

  static equals(a: LoginUserResponse | PlainMessage<LoginUserResponse> | undefined, b: LoginUserResponse | PlainMessage<LoginUserResponse> | undefined): boolean;
}

/**
 * @generated from message user.v1.GetUserRequest
 */
export declare class GetUserRequest extends Message<GetUserRequest> {
  constructor(data?: PartialMessage<GetUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.GetUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserRequest;

  static equals(a: GetUserRequest | PlainMessage<GetUserRequest> | undefined, b: GetUserRequest | PlainMessage<GetUserRequest> | undefined): boolean;
}

/**
 * @generated from message user.v1.GetUserResponse
 */
export declare class GetUserResponse extends Message<GetUserResponse> {
  /**
   * @generated from field: user.v1.User user = 1;
   */
  user?: User;

  constructor(data?: PartialMessage<GetUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.GetUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserResponse;

  static equals(a: GetUserResponse | PlainMessage<GetUserResponse> | undefined, b: GetUserResponse | PlainMessage<GetUserResponse> | undefined): boolean;
}

/**
 * @generated from message user.v1.DeleteUserRequest
 */
export declare class DeleteUserRequest extends Message<DeleteUserRequest> {
  constructor(data?: PartialMessage<DeleteUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.DeleteUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserRequest;

  static equals(a: DeleteUserRequest | PlainMessage<DeleteUserRequest> | undefined, b: DeleteUserRequest | PlainMessage<DeleteUserRequest> | undefined): boolean;
}

/**
 * @generated from message user.v1.DeleteUserResponse
 */
export declare class DeleteUserResponse extends Message<DeleteUserResponse> {
  /**
   * @generated from field: user.v1.User user = 1;
   */
  user?: User;

  constructor(data?: PartialMessage<DeleteUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.DeleteUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserResponse;

  static equals(a: DeleteUserResponse | PlainMessage<DeleteUserResponse> | undefined, b: DeleteUserResponse | PlainMessage<DeleteUserResponse> | undefined): boolean;
}

